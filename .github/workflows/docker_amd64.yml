name: Evolinx - AMD64

on:
    schedule:
        - cron: '0 0 * * *'
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - name: prepare build env
      run: |
        # Basics
        mkdir -p ~/EVOLINX
        cd ~/EVOLINX

        ##
        # NOTE: Will be used for
        # imgsys - builds docker images + can push the built images
        # developing - Includes all docker image files for build
        ##
        git clone https://git.martinvlba.eu/Evolinx/build_docker_imgsys.git imgsys
        git clone https://git.martinvlba.eu/Evolinx/build_docker_developing developing

    - name: Setup bootstrap environment
      run: |
        cd ~/EVOLINX
        export P_ROOT=$(pwd)

        # Pull docker image and make new container of it
        sudo docker pull hilledkinged/evolinx:latest
        docker container create \
        --name work01 \
        --volume $P_ROOT:/home/developer/EVOLINX \
        --tty \
        --privileged \
        --device=/dev/loop-control:/dev/loop-control \
        --device=/var/run/docker.sock:/var/run/docker.sock \
        --device=/dev/loop0:/dev/loop0 \
        hilledkinged/evolinx /bin/bash

        sleep 1
        sudo docker start work01 >/dev/null
        sleep 1

        # Patching rootfs for proper usage
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "rm -rf /var/lib/bottle/sync/*"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "useradd developer -m -g wheel"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "chown -R developer /home/developer/EVOLINX"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "cp -f /home/developer/EVOLINX/developing/bottle/amd64_bottle.conf /etc/bottle.conf"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bottle -Syu --needed --noconfirm --disable-download-timeout"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bottle --needed --noconfirm --disable-download-timeout -Sy docker base-install-scripts sudo nano mpfr mpc base-devel m4 git libisoburn dialog syslinux"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bash -c /home/developer/EVOLINX/developing/sudo/fix_sudo.sh"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bash -c /home/developer/EVOLINX/developing/rootsys/locale.sh"

        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "chown -R developer /home/developer/EVOLINX"

    - name: Create new rootfs
      run: |
        # Lets make minimal env with only attr for faster testing times
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 su developer -c "cd ~/EVOLINX && sudo mkdir -p rootfs"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 su developer -c "cd ~/EVOLINX && sudo base-strap rootfs base-chroot linux"

        # Cut down all un-needed files
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 su developer -c "cd ~/EVOLINX && sudo rm -rf rootfs/lib/modules/*/kernel"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 su developer -c "cd ~/EVOLINX && sudo rm -rf rootfs/lib/firmware/*"

    - name: Login to docker.io
      uses: docker/login-action@v1
      with:
        username: hilledkinged
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push docker image
      run: |
        docker image push hilledkinged/evolinx:latest
